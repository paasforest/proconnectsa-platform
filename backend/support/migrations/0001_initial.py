# Generated by Django 5.2.6 on 2025-09-09 12:17

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupportMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_tickets', models.IntegerField(default=0)),
                ('open_tickets', models.IntegerField(default=0)),
                ('resolved_tickets', models.IntegerField(default=0)),
                ('closed_tickets', models.IntegerField(default=0)),
                ('avg_resolution_time_hours', models.FloatField(default=0.0)),
                ('avg_satisfaction_rating', models.FloatField(default=0.0)),
                ('tickets_by_category', models.JSONField(default=dict)),
                ('tickets_by_priority', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('technical', 'Technical Issue'), ('billing', 'Billing & Payments'), ('account', 'Account Issues'), ('feature', 'Feature Request'), ('bug', 'Bug Report'), ('subscription', 'Subscription Management'), ('general', 'General Inquiry'), ('refund', 'Refund Request'), ('integration', 'API Integration'), ('other', 'Other')], default='general', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('pending_customer', 'Pending Customer Response'), ('pending_internal', 'Pending Internal Review'), ('resolved', 'Resolved'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('user_type', models.CharField(choices=[('client', 'Client'), ('provider', 'Provider')], default='client', max_length=10)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('internal_notes', models.TextField(blank=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, help_text='Customer satisfaction rating (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('satisfaction_feedback', models.TextField(blank=True)),
                ('assigned_to', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, limit_choices_to={'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_tickets', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketResponse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('response_type', models.CharField(choices=[('customer', 'Customer Response'), ('staff', 'Staff Response'), ('system', 'System Message'), ('internal', 'Internal Note')], default='customer', max_length=10)),
                ('message', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal note not visible to customer')),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_responses', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='support.supportticket')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('common_issues', 'Common Issues'), ('billing_responses', 'Billing Responses'), ('technical_responses', 'Technical Responses'), ('account_responses', 'Account Responses'), ('feature_responses', 'Feature Responses')], max_length=20)),
                ('subject_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['status', 'priority'], name='support_sup_status_c67c70_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['category', 'created_at'], name='support_sup_categor_a1e5a2_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['user', 'created_at'], name='support_sup_user_id_2e68d8_idx'),
        ),
        migrations.AddIndex(
            model_name='supportticket',
            index=models.Index(fields=['assigned_to', 'status'], name='support_sup_assigne_87974a_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketresponse',
            index=models.Index(fields=['ticket', 'created_at'], name='support_tic_ticket__9566a2_idx'),
        ),
        migrations.AddIndex(
            model_name='ticketresponse',
            index=models.Index(fields=['author', 'created_at'], name='support_tic_author__42ece0_idx'),
        ),
    ]
