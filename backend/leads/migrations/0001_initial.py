# Generated by Django 5.2.6 on 2025-09-07 08:49

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class name for frontend display', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='leads.servicecategory')),
            ],
            options={
                'verbose_name_plural': 'Service Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location_address', models.TextField()),
                ('location_suburb', models.CharField(max_length=100)),
                ('location_city', models.CharField(default='Cape Town', max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('budget_range', models.CharField(choices=[('under_1000', 'Under R1,000'), ('1000_5000', 'R1,000 - R5,000'), ('5000_15000', 'R5,000 - R15,000'), ('15000_50000', 'R15,000 - R50,000'), ('over_50000', 'Over R50,000'), ('no_budget', 'Need Quote First')], max_length=20)),
                ('urgency', models.CharField(choices=[('urgent', 'Urgent (ASAP)'), ('this_week', 'This Week'), ('this_month', 'This Month'), ('flexible', 'Flexible Timing')], max_length=20)),
                ('preferred_contact_time', models.CharField(blank=True, max_length=100)),
                ('additional_requirements', models.TextField(blank=True)),
                ('verification_score', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('verification_notes', models.TextField(blank=True)),
                ('is_sms_verified', models.BooleanField(default=False)),
                ('sms_verification_code', models.CharField(blank=True, max_length=6)),
                ('sms_verification_attempts', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending Verification'), ('verifying', 'Client Verification in Progress'), ('verified', 'Verified & Ready for Assignment'), ('assigned', 'Assigned to Providers'), ('completed', 'Job Completed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('assigned_providers_count', models.IntegerField(default=0)),
                ('total_provider_contacts', models.IntegerField(default=0)),
                ('source', models.CharField(default='website', help_text='Lead source: website, api, referral, etc.', max_length=50)),
                ('utm_source', models.CharField(blank=True, max_length=100)),
                ('utm_medium', models.CharField(blank=True, max_length=100)),
                ('utm_campaign', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads_created', to=settings.AUTH_USER_MODEL)),
                ('service_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leads.servicecategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LeadAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('contacted_at', models.DateTimeField(blank=True, null=True)),
                ('quote_provided_at', models.DateTimeField(blank=True, null=True)),
                ('provider_notes', models.TextField(blank=True)),
                ('quote_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estimated_duration', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('viewed', 'Viewed by Provider'), ('contacted', 'Provider Contacted Client'), ('quoted', 'Quote Provided'), ('won', 'Job Won'), ('lost', 'Job Lost'), ('no_response', 'No Response from Provider')], default='assigned', max_length=20)),
                ('won_job', models.BooleanField(blank=True, null=True)),
                ('client_feedback', models.TextField(blank=True)),
                ('provider_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('credit_cost', models.IntegerField(default=1)),
                ('credit_refunded', models.BooleanField(default=False)),
                ('refund_reason', models.TextField(blank=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='leads.lead')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lead_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_at'],
                'indexes': [models.Index(fields=['provider', 'assigned_at'], name='leads_leada_provide_c1bed4_idx'), models.Index(fields=['lead', 'status'], name='leads_leada_lead_id_1a195f_idx'), models.Index(fields=['status', 'assigned_at'], name='leads_leada_status_95ffcf_idx')],
                'unique_together': {('lead', 'provider')},
            },
        ),
        migrations.AddIndex(
            model_name='servicecategory',
            index=models.Index(fields=['is_active', 'name'], name='leads_servi_is_acti_7f6286_idx'),
        ),
        migrations.AddIndex(
            model_name='servicecategory',
            index=models.Index(fields=['parent', 'is_active'], name='leads_servi_parent__d490d4_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['status', 'created_at'], name='leads_lead_status_2b0e1e_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['service_category', 'location_city'], name='leads_lead_service_ee1899_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['client', 'created_at'], name='leads_lead_client__fd34d1_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['verification_score', 'status'], name='leads_lead_verific_6436ec_idx'),
        ),
        migrations.AddIndex(
            model_name='lead',
            index=models.Index(fields=['expires_at'], name='leads_lead_expires_72ce8e_idx'),
        ),
    ]
